import React, { useState } from 'react';
import { Terminal, Cloud, Code2, Zap, Github, ChevronRight, Box, Check, Copy, PlayCircle, BookOpen, Shield, Database, Server, GitBranch, TestTube, Container, Workflow, Settings, Linkedin, Twitter, Mail, MapPin } from 'lucide-react';

function App() {
  const [prompt, setPrompt] = useState("Create a production-ready Kubernetes cluster on AWS with auto-scaling, monitoring, and CI/CD pipeline using ArgoCD");
  const [selectedCloud, setSelectedCloud] = useState('aws');
  const [selectedTool, setSelectedTool] = useState('terraform');
  const [isGenerating, setIsGenerating] = useState(false);
  const [activeTab, setActiveTab] = useState('infra');

  const handleGenerate = () => {
    setIsGenerating(true);
    setTimeout(() => setIsGenerating(false), 1500);
  };

  const cloudOptions = [
    { id: 'aws', name: 'AWS', icon: <Cloud className="h-5 w-5" /> },
    { id: 'gcp', name: 'Google Cloud', icon: <Cloud className="h-5 w-5" /> },
    { id: 'azure', name: 'Azure', icon: <Cloud className="h-5 w-5" /> }
  ];

  const toolOptions = [
    { id: 'terraform', name: 'Terraform' },
    { id: 'pulumi', name: 'Pulumi' },
    { id: 'cloudformation', name: 'CloudFormation' },
    { id: 'bicep', name: 'Bicep' }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-b from-slate-900 to-slate-800">
      {/* Navigation */}
      <nav className="container mx-auto px-6 py-4 sticky top-0 bg-slate-900/80 backdrop-blur-sm z-50">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <Terminal className="h-8 w-8 text-emerald-400" />
            <span className="text-2xl font-bold text-white">GenIaaC</span>
          </div>
          <div className="hidden md:flex space-x-8">
            <a href="#features" className="text-gray-300 hover:text-white transition">Features</a>
            <a href="#playground" className="text-gray-300 hover:text-white transition">Playground</a>
            <a href="#pricing" className="text-gray-300 hover:text-white transition">Pricing</a>
            <a href="#docs" className="text-gray-300 hover:text-white transition">Docs</a>
          </div>
          <div className="flex items-center space-x-4">
            <button className="px-4 py-2 text-gray-300 hover:text-white transition">Sign In</button>
            <button className="px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 transition">
              Get Started
            </button>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <main className="container mx-auto px-6 py-20">
        <div className="text-center max-w-4xl mx-auto">
          <h1 className="text-5xl md:text-6xl font-bold text-white mb-6">
            Infrastructure as Code,{" "}
            <span className="bg-gradient-to-r from-emerald-400 via-sky-400 to-purple-500 text-transparent bg-clip-text">Generated by AI</span>
          </h1>
          <p className="text-xl text-gray-300 mb-10">
            Generate, test, and deploy production-ready infrastructure code with AI.
            From Kubernetes clusters to serverless applications, we've got you covered.
          </p>
          <div className="flex flex-col sm:flex-row justify-center gap-4">
            <button className="px-8 py-4 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 transition flex items-center justify-center space-x-2">
              <span>Start Building</span>
              <ChevronRight className="h-5 w-5" />
            </button>
            <button className="px-8 py-4 bg-slate-700 text-white rounded-lg hover:bg-slate-600 transition flex items-center justify-center space-x-2">
              <Github className="h-5 w-5" />
              <span>View on GitHub</span>
            </button>
          </div>
        </div>

        {/* Interactive Playground */}
        <div id="playground" className="mt-20 max-w-5xl mx-auto">
          <div className="bg-slate-800 rounded-xl p-6 shadow-2xl">
            <div className="flex items-center justify-between mb-6">
              <div className="flex items-center space-x-2">
                <div className="w-3 h-3 rounded-full bg-red-500"></div>
                <div className="w-3 h-3 rounded-full bg-yellow-500"></div>
                <div className="w-3 h-3 rounded-full bg-green-500"></div>
              </div>
              <div className="flex space-x-4">
                {cloudOptions.map((cloud) => (
                  <button
                    key={cloud.id}
                    onClick={() => setSelectedCloud(cloud.id)}
                    className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${
                      selectedCloud === cloud.id
                        ? 'bg-emerald-500 text-white'
                        : 'bg-slate-700 text-gray-300 hover:bg-slate-600'
                    }`}
                  >
                    {cloud.icon}
                    <span>{cloud.name}</span>
                  </button>
                ))}
              </div>
            </div>

            <div className="grid grid-cols-4 gap-4 mb-4">
              {toolOptions.map((tool) => (
                <button
                  key={tool.id}
                  onClick={() => setSelectedTool(tool.id)}
                  className={`px-4 py-2 rounded-lg ${
                    selectedTool === tool.id
                      ? 'bg-emerald-500 text-white'
                      : 'bg-slate-700 text-gray-300 hover:bg-slate-600'
                  }`}
                >
                  {tool.name}
                </button>
              ))}
            </div>

            <div className="mb-4">
              <textarea
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                className="w-full bg-slate-900 text-gray-300 p-4 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-emerald-500"
                rows={4}
                placeholder="Describe your infrastructure needs..."
              />
            </div>

            <div className="flex space-x-4 mb-4">
              <button
                onClick={() => setActiveTab('infra')}
                className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${
                  activeTab === 'infra'
                    ? 'bg-emerald-500 text-white'
                    : 'bg-slate-700 text-gray-300 hover:bg-slate-600'
                }`}
              >
                <Server className="h-5 w-5" />
                <span>Infrastructure</span>
              </button>
              <button
                onClick={() => setActiveTab('test')}
                className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${
                  activeTab === 'test'
                    ? 'bg-emerald-500 text-white'
                    : 'bg-slate-700 text-gray-300 hover:bg-slate-600'
                }`}
              >
                <TestTube className="h-5 w-5" />
                <span>Tests</span>
              </button>
              <button
                onClick={() => setActiveTab('cicd')}
                className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${
                  activeTab === 'cicd'
                    ? 'bg-emerald-500 text-white'
                    : 'bg-slate-700 text-gray-300 hover:bg-slate-600'
                }`}
              >
                <GitBranch className="h-5 w-5" />
                <span>CI/CD</span>
              </button>
            </div>

            <button
              onClick={handleGenerate}
              disabled={isGenerating}
              className="w-full py-3 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 transition flex items-center justify-center space-x-2 disabled:opacity-50"
            >
              {isGenerating ? (
                <span>Generating...</span>
              ) : (
                <>
                  <PlayCircle className="h-5 w-5" />
                  <span>Generate Infrastructure Code</span>
                </>
              )}
            </button>

            <pre className="mt-4 text-sm text-gray-300 overflow-x-auto bg-slate-900 p-4 rounded-lg">
              {activeTab === 'infra' && (
                <code>{`# Generated Terraform Code for AWS EKS Cluster

module "vpc" {
  source = "terraform-aws-modules/vpc/aws"
  version = "5.0.0"

  name = "eks-vpc"
  cidr = "10.0.0.0/16"
  
  azs             = ["us-west-2a", "us-west-2b", "us-west-2c"]
  private_subnets = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
  public_subnets  = ["10.0.101.0/24", "10.0.102.0/24", "10.0.103.0/24"]

  enable_nat_gateway = true
  single_nat_gateway = true
}

module "eks" {
  source = "terraform-aws-modules/eks/aws"
  version = "19.0.0"

  cluster_name    = "production-cluster"
  cluster_version = "1.27"

  vpc_id     = module.vpc.vpc_id
  subnet_ids = module.vpc.private_subnets

  eks_managed_node_groups = {
    general = {
      desired_size = 2
      min_size     = 1
      max_size     = 5

      instance_types = ["t3.medium"]
      capacity_type  = "ON_DEMAND"
    }
  }
}`}</code>
              )}
              {activeTab === 'test' && (
                <code>{`# Generated Terratest Code

package test

import (
  "testing"
  "github.com/gruntwork-io/terratest/modules/terraform"
  "github.com/stretchr/testify/assert"
)

func TestEKSCluster(t *testing.T) {
  terraformOptions := &terraform.Options{
    TerraformDir: "../",
    Vars: map[string]interface{}{
      "cluster_name": "test-cluster",
    },
  }

  defer terraform.Destroy(t, terraformOptions)
  terraform.InitAndApply(t, terraformOptions)

  clusterName := terraform.Output(t, terraformOptions, "cluster_name")
  assert.Equal(t, "test-cluster", clusterName)

  nodeCount := terraform.Output(t, terraformOptions, "node_count")
  assert.Equal(t, "2", nodeCount)
}`}</code>
              )}
              {activeTab === 'cicd' && (
                <code>{`# Generated GitHub Actions Workflow

name: Infrastructure CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Format
        run: terraform fmt -check
      
      - name: Terraform Plan
        run: terraform plan
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve`}</code>
              )}
            </pre>
          </div>
        </div>
      </main>

      {/* Features */}
      <section id="features" className="bg-slate-800 py-20">
        <div className="container mx-auto px-6">
          <h2 className="text-3xl font-bold text-white text-center mb-12">
            Complete Infrastructure Generation Platform
          </h2>
          <div className="grid md:grid-cols-4 gap-8">
            <FeatureCard 
              icon={<Code2 className="h-8 w-8 text-emerald-400" />}
              title="Multi-Cloud Support"
              description="Generate infrastructure code for AWS, Azure, GCP, and more."
            />
            <FeatureCard 
              icon={<Container className="h-8 w-8 text-emerald-400" />}
              title="Container Orchestration"
              description="Kubernetes, ECS, and container deployment configurations."
            />
            <FeatureCard 
              icon={<TestTube className="h-8 w-8 text-emerald-400" />}
              title="Automated Testing"
              description="Generate infrastructure tests with Terratest, AWSpec, and more."
            />
            <FeatureCard 
              icon={<Workflow className="h-8 w-8 text-emerald-400" />}
              title="CI/CD Pipeline"
              description="Automated workflows for infrastructure deployment."
            />
          </div>
        </div>
      </section>

      {/* Pricing Section */}
      <section id="pricing" className="py-20">
        <div className="container mx-auto px-6">
          <h2 className="text-3xl font-bold text-white text-center mb-12">
            Simple, Transparent Pricing
          </h2>
          <div className="grid md:grid-cols-3 gap-8 max-w-5xl mx-auto">
            <PricingCard
              title="Free"
              price="$0"
              features={[
                "5 infrastructure generations per day",
                "Basic templates",
                "Community support",
                "Single cloud provider"
              ]}
              buttonText="Get Started"
              popular={false}
            />
            <PricingCard
              title="Pro"
              price="$49"
              period="/month"
              features={[
                "Unlimited generations",
                "All cloud providers",
                "Priority support",
                "Custom templates",
                "Infrastructure testing"
              ]}
              buttonText="Start Free Trial"
              popular={true}
            />
            <PricingCard
              title="Enterprise"
              price="Custom"
              features={[
                "Everything in Pro",
                "Custom integrations",
                "Dedicated support",
                "SLA guarantee",
                "Training & onboarding"
              ]}
              buttonText="Contact Sales"
              popular={false}
            />
          </div>
        </div>
      </section>

      {/* Documentation */}
      <section id="docs" className="bg-slate-800 py-20">
        <div className="container mx-auto px-6">
          <h2 className="text-3xl font-bold text-white text-center mb-12">
            Comprehensive Documentation
          </h2>
          <div className="grid md:grid-cols-2 gap-12 max-w-5xl mx-auto">
            <div>
              <h3 className="text-xl font-semibold text-white mb-4">Infrastructure Guides</h3>
              <div className="space-y-4">
                <DocLink title="Getting Started" description="Your first infrastructure deployment" />
                <DocLink title="Cloud Providers" description="AWS, Azure, and GCP setup guides" />
                <DocLink title="Kubernetes" description="Container orchestration setup" />
                <DocLink title="Security Best Practices" description="Secure infrastructure patterns" />
              </div>
            </div>
            <div>
              <h3 className="text-xl font-semibold text-white mb-4">Testing & Deployment</h3>
              <div className="space-y-4">
                <DocLink title="Infrastructure Testing" description="Test your infrastructure code" />
                <DocLink title="CI/CD Setup" description="Automated deployment pipelines" />
                <DocLink title="Monitoring" description="Infrastructure observability" />
                <DocLink title="Cost Optimization" description="Optimize cloud spending" />
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-slate-900 py-16 border-t border-slate-800">
        <div className="container mx-auto px-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-12">
            <div className="space-y-4">
              <div className="flex items-center space-x-2">
                <Terminal className="h-8 w-8 text-emerald-400" />
                <span className="text-2xl font-bold text-white">GenIaaC</span>
              </div>
              <p className="text-gray-400">
                Empowering teams to build and manage cloud infrastructure with AI-powered automation.
              </p>
              <div className="flex space-x-4">
                <a href="#" className="text-gray-400 hover:text-emerald-400 transition">
                  <Github className="h-5 w-5" />
                </a>
                <a href="#" className="text-gray-400 hover:text-emerald-400 transition">
                  <Linkedin className="h-5 w-5" />
                </a>
                <a href="#" className="text-gray-400 hover:text-emerald-400 transition">
                  <Twitter className="h-5 w-5" />
                </a>
              </div>
            </div>

            <div>
              <h3 className="text-white font-semibold mb-4">Product</h3>
              <ul className="space-y-3">
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Features</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Pricing</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Enterprise</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Case Studies</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Documentation</a>
                </li>
              </ul>
            </div>

            <div>
              <h3 className="text-white font-semibold mb-4">Resources</h3>
              <ul className="space-y-3">
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Blog</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Community</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Support</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">API Reference</a>
                </li>
                <li>
                  <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Status</a>
                </li>
              </ul>
            </div>

            <div>
              <h3 className="text-white font-semibold mb-4">Contact</h3>
              <ul className="space-y-3">
                <li className="flex items-center space-x-2 text-gray-400">
                  <Mail className="h-5 w-5 text-emerald-400" />
                  <span>contact@geniaac.com</span>
                </li>
                <li className="flex items-center space-x-2 text-gray-400">
                  <MapPin className="h-5 w-5 text-emerald-400" />
                  <span>San Francisco, CA</span>
                </li>
              </ul>
              <div className="mt-6">
                <button className="w-full bg-emerald-500 text-white py-2 px-4 rounded-lg hover:bg-emerald-600 transition">
                  Schedule a Demo
                </button>
              </div>
            </div>
          </div>

          <div className="mt-12 pt-8 border-t border-slate-800">
            <div className="flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0">
              <div className="text-gray-400 text-sm">
                © 2025 GenIaaC. All rights reserved.
              </div>
              <div className="flex space-x-6 text-sm">
                <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Terms</a>
                <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Privacy</a>
                <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Security</a>
                <a href="#" className="text-gray-400 hover:text-emerald-400 transition">Cookies</a>
              </div>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}

function FeatureCard({ icon, title, description }) {
  return (
    <div className="bg-slate-700 p-6 rounded-lg">
      <div className="mb-4">{icon}</div>
      <h3 className="text-xl font-semibold text-white mb-2">{title}</h3>
      <p className="text-gray-300">{description}</p>
    </div>
  );
}

function PricingCard({ title, price, period = "", features, buttonText, popular }) {
  return (
    <div className={`bg-slate-700 rounded-lg p-8 relative ${popular ? 'ring-2 ring-emerald-500' : ''}`}>
      {popular && (
        <span className="absolute -top-4 left-1/2 -translate-x-1/2 bg-emerald-500 text-white px-4 py-1 rounded-full text-sm">
          Most Popular
        </span>
      )}
      <h3 className="text-xl font-semibold text-white mb-2">{title}</h3>
      <div className="mb-6">
        <span className="text-4xl font-bold text-white">{price}</span>
        <span className="text-gray-300">{period}</span>
      </div>
      <ul className="space-y-4 mb-8">
        {features.map((feature, index) => (
          <li key={index} className="flex items-center space-x-2 text-gray-300">
            <Check className="h-5 w-5 text-emerald-400" />
            <span>{feature}</span>
          </li>
        ))}
      </ul>
      <button className={`w-full py-2 rounded-lg transition ${
        popular 
          ? 'bg-emerald-500 text-white hover:bg-emerald-600' 
          : 'bg-slate-600 text-white hover:bg-slate-500'
      }`}>
        {buttonText}
      </button>
    </div>
  );
}

function DocLink({ title, description }) {
  return (
    <a href="#" className="block p-4 bg-slate-700 rounded-lg hover:bg-slate-600 transition">
      <h4 className="text-lg font-semibold text-white mb-1">{title}</h4>
      <p className="text-gray-300 text-sm">{description}</p>
    </a>
  );
}

export default App;